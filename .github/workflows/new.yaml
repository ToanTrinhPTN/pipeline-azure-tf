name: 'Infrastructure Provision'
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Choose environment to perform with terraform
        required: true
        default: 'prod'
        options:
          - test
          - prod
      name:
        type: choice
        description: Choose action to perform with terraform
        required: true
        default: 'apply'
        options:
          - apply
          - destroy

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  TF_VAR_mysql_admin_user: ${{ secrets.MYSQL_ADMIN_USER }}
  TF_VAR_mysql_admin_password: ${{ secrets.MYSQL_ADMIN_PASSWORD }}


jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: './terraform/${{github.event.inputs.environment}}/'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init

    # Login to Azure CLI to perform terraform's action 
    - name: Login into Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} 

    - name: Terraform Plan
      run: terraform plan 

      # Apply Terraform
    - name: Terraform Apply
      run: terraform apply -auto-approve         
      
      # Destroy Terraform
    - name: Terraform Destroy
      if: github.event.inputs.name == 'destroy' 
      run: terraform destroy -auto-approve -input=false
    
